# ==============================================
# PRODUCCIÓN - BIP2 Semantic Search Platform
# ==============================================
# IMPORTANTE: Copiar este archivo a .env.production y editar los valores

# --- Database Configuration (PostgreSQL interno de Docker) ---
POSTGRES_DB=qdrant_catalog_sync
POSTGRES_USER=postgres
# ⚠️ CAMBIAR: Generar con: openssl rand -base64 32
POSTGRES_PASSWORD=TU_PASSWORD_POSTGRESQL_AQUI

# --- Redis Configuration (Redis interno de Docker) ---
# ⚠️ CAMBIAR: Generar con: openssl rand -base64 32
REDIS_PASSWORD=TU_PASSWORD_REDIS_AQUI

# --- API Keys Externas ---
# ⚠️ OBLIGATORIO: Obtener de https://aistudio.google.com/app/apikey
GEMINI_API_KEY=AIzaSy...TU_API_KEY_DE_GEMINI_AQUI

# --- Security ---
# ⚠️ CAMBIAR: Generar con: openssl rand -base64 48
JWT_SECRET=TU_JWT_SECRET_MUY_LARGO_Y_ALEATORIO_AQUI

# --- Domains (Configurar según tu infraestructura) ---
# Ejemplo si tu empresa es "efc.com.pe":
# FRONTEND_DOMAIN=bip.efc.com.pe
# BACKEND_DOMAIN=api-bip.efc.com.pe
FRONTEND_DOMAIN=bip.tuempresa.com
BACKEND_DOMAIN=api.bip.tuempresa.com

# --- CORS (Debe coincidir con FRONTEND_DOMAIN) ---
CORS_ORIGIN=https://bip.tuempresa.com

# --- Frontend API URL (Debe coincidir con BACKEND_DOMAIN) ---
NEXT_PUBLIC_API_URL=https://api.bip.tuempresa.com/api

# ==============================================
# EJEMPLO DE VALORES GENERADOS PARA PRODUCCIÓN:
# ==============================================
#
# POSTGRES_PASSWORD=xK9mN2pQ8vR4tY6wZ1aB3cD5eF7gH9jL0mN2pQ4rS6tU8vW
# REDIS_PASSWORD=aB3cD5eF7gH9jK1mN3pQ5rS7tU9vW1xY3zA5bC7dE9fG1hI3
# JWT_SECRET=nP8qR2sT4uV6wX8yZ0aB2cD4eF6gH8iJ0kL2mN4oP6qR8sT0uV2wX4yZ6aB8cD0eF2gH4iJ6kL8mN0oP2
#
# GEMINI_API_KEY=AIzaSyDexampleAPIkey1234567890abcdefghijk
#
# FRONTEND_DOMAIN=bip.efc.com.pe
# BACKEND_DOMAIN=api-bip.efc.com.pe
# CORS_ORIGIN=https://bip.efc.com.pe
# NEXT_PUBLIC_API_URL=https://api-bip.efc.com.pe/api
#
# ==============================================

# ==============================================
# COMANDOS PARA GENERAR PASSWORDS SEGUROS:
# ==============================================
# En el servidor, ejecutar:
#
# # Password de PostgreSQL
# openssl rand -base64 32
#
# # Password de Redis
# openssl rand -base64 32
#
# # JWT Secret
# openssl rand -base64 48
# ==============================================

# ==============================================
# CHECKLIST ANTES DE DEPLOYMENT:
# ==============================================
# [ ] POSTGRES_PASSWORD cambiado (no usar el de ejemplo)
# [ ] REDIS_PASSWORD cambiado (no usar el de ejemplo)
# [ ] JWT_SECRET cambiado (no usar el de ejemplo)
# [ ] GEMINI_API_KEY obtenida de Google AI Studio
# [ ] FRONTEND_DOMAIN apunta al servidor (verificar con nslookup)
# [ ] BACKEND_DOMAIN apunta al servidor (verificar con nslookup)
# [ ] CORS_ORIGIN coincide con FRONTEND_DOMAIN
# [ ] NEXT_PUBLIC_API_URL coincide con BACKEND_DOMAIN
# [ ] Este archivo NO está en Git (.env.production está en .gitignore)
# ==============================================
